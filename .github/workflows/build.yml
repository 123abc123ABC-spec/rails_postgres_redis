name: Build and Push to ECR

concurrency:
  group: build
  cancel-in-progress: true

on:
  push:
    branches:
      - main
    # Only trigger on these paths (ignore documentation and config files)
    paths:
      - 'app/**'
      - 'config/**'
      - 'db/**'
      - 'lib/**'
      - 'public/**'
      - 'Gemfile'
      - 'Gemfile.lock'
      - 'Dockerfile'
      - '.github/workflows/build.yml'
    # Ignore these paths (don't trigger build)
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '.env.example'
  workflow_dispatch:

env:
  AWS_REGION: eu-north-1
  ECR_REGISTRY: 888577024605.dkr.ecr.eu-north-1.amazonaws.com
  ECR_REPOSITORY: rails-app

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    
    outputs:
      image: ${{ steps.image.outputs.image }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        id: image
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }} .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }} $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}" >> $GITHUB_OUTPUT

      - name: Push image to Amazon ECR
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: Build successful
        run: echo "âœ… Docker image built and pushed to ECR successfully!"

  trigger-deploy:
    name: Trigger Deployment
    needs: build
    runs-on: ubuntu-latest
    
    steps:
      - name: Trigger deploy workflow
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deploy.yml',
              ref: 'main'
            })

